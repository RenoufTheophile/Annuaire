// <auto-generated />
using System;
using Annuaire.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Annuaire.Migrations
{
    [DbContext(typeof(PersonneContext))]
    [Migration("20210831144455_Ram5")]
    partial class Ram5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("Annuaire.Models.Info", b =>
                {
                    b.Property<string>("seed")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("seed");

                    b.Property<int>("page")
                        .HasColumnType("int")
                        .HasColumnName("page");

                    b.Property<int>("results")
                        .HasColumnType("int")
                        .HasColumnName("results");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("version");

                    b.HasKey("seed");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("Annuaire.Models.Name", b =>
                {
                    b.Property<string>("title")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("title");

                    b.Property<string>("first")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first");

                    b.Property<string>("last")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last");

                    b.HasKey("title");

                    b.ToTable("Name");
                });

            modelBuilder.Entity("Annuaire.Models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("first")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first");

                    b.Property<string>("infoseed")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("service")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("infoseed");

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("Annuaire.Models.Registered", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("service")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("service");

                    b.HasKey("date");

                    b.ToTable("Registered");
                });

            modelBuilder.Entity("Annuaire.Models.Result", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("email");

                    b.Property<int?>("PersonneId")
                        .HasColumnType("int");

                    b.Property<string>("nametitle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("registereddate")
                        .HasColumnType("datetime2");

                    b.HasKey("email");

                    b.HasIndex("PersonneId");

                    b.HasIndex("nametitle");

                    b.HasIndex("registereddate");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("Annuaire.Models.Personne", b =>
                {
                    b.HasOne("Annuaire.Models.Info", "info")
                        .WithMany()
                        .HasForeignKey("infoseed");

                    b.Navigation("info");
                });

            modelBuilder.Entity("Annuaire.Models.Result", b =>
                {
                    b.HasOne("Annuaire.Models.Personne", null)
                        .WithMany("results")
                        .HasForeignKey("PersonneId");

                    b.HasOne("Annuaire.Models.Name", "name")
                        .WithMany()
                        .HasForeignKey("nametitle");

                    b.HasOne("Annuaire.Models.Registered", "registered")
                        .WithMany()
                        .HasForeignKey("registereddate");

                    b.Navigation("name");

                    b.Navigation("registered");
                });

            modelBuilder.Entity("Annuaire.Models.Personne", b =>
                {
                    b.Navigation("results");
                });
#pragma warning restore 612, 618
        }
    }
}
